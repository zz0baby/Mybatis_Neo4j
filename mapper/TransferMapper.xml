<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.TransferMapper">
	
	<!-- 结果集 -->
	<resultMap id="transferMap" type="TransferBean">
		<result property="cardID" column="cardID" javaType="java.lang.String" />
		<result property="score" column="score" javaType="java.lang.Integer" /> 
	</resultMap>
	<resultMap id="ownMap" type="OwnBean">
		<result property="cardID" column="cardID" javaType="java.lang.String" />
		<result property="pID" column="pID" javaType="java.lang.String" /> 
	</resultMap>
	
	<select id="own" resultMap="ownMap">
		MATCH (n)-[p:Own]->(m)
		RETURN m.cardID as cardID,n.pID as pID
	</select>
	<select id="degreeC" resultMap="transferMap">
		MATCH (n)-[p:Transfer]-() where p.date =~'2018-.*'
		RETURN n.cardID as cardID,count(p) as score order by count(p) DESC
	</select>
	
	<select id="betweenC" resultMap="transferMap">
		match(n:Protocol)
		with collect(n) as users
		call apoc.algo.betweenness(['Transfer'],users,'BOTH') yield node,score
		set node.betweenness = score
		return node.cardID as cardID,score order by score desc
	</select>
</mapper>